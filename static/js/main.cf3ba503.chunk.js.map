{"version":3,"sources":["config.js","DataService.js","pages/addCatalog.js","pages/editCatalog.js","pages/listCatalog.js","components/Navbar.js","components/Footer.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddCatalog","props","onChangeTitle","bind","onChangeDescription","onChangeLink","onChangeDisplayname","saveCatalog","newCatalog","state","description","link","displayname","archived","submitted","e","this","setState","target","value","CatalogDataService","then","response","console","log","catch","className","onClick","htmlFor","type","required","onChange","name","Component","EditCatalog","submitHandler","event","_id","preventDefault","fetchOptions","method","body","JSON","stringify","fetch","json","getCatalog","changeHandler","key","getAttribute","update","updateArchived","currentState","catalog","editForm","onSubmit","default","message","CatalogList","catalogList","map","item","updateCatalog","thisCatalog","i","length","stupidFind","NavBar","href","rel","to","Footer","Page","children","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cf3ba503.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nexport default axios.create({\n  baseURL: \"https://helio-catalog-api.herokuapp.com/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n\n/*\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n\n*/","import http from \"./config\";\n\nclass CatalogDataService {\n  getAll() {\n    return http.get(\"/catalog\");\n  }\n\n  get(id) {\n    return http.get(`/catalog/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/catalog\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/catalog/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/catalog/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/catalog`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/catalog?title=${title}`);\n  }\n}\n\nexport default new CatalogDataService();\n","import React, { Component } from \"react\";\nimport CatalogDataService from \"../DataService\";\n\nexport default class AddCatalog extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeLink = this.onChangeLink.bind(this);\n    this.onChangeDisplayname = this.onChangeDisplayname.bind(this);\n    this.saveCatalog = this.saveCatalog.bind(this);\n    this.newCatalog = this.newCatalog.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\",\n      link: \"\",\n      displayname: \"\",\n      archived: false,\n\n      submitted: false,\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  onChangeLink(e) {\n    this.setState({\n      link: e.target.value,\n    });\n  }\n\n  onChangeDisplayname(e) {\n    this.setState({\n      displayname: e.target.value,\n    });\n  }\n\n  saveCatalog() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description,\n      link: this.state.link,\n      displayname: this.state.displayname,\n    };\n\n    CatalogDataService.create(data)\n      .then((response) => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          link: response.data.link,\n          displayname: response.data.displayname,\n          archived: response.data.archived,\n\n          submitted: true,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newCatalog() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      link: \"\",\n      displayname: \"\",\n      archived: false,\n\n      submitted: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newCatalog}>\n              Add Another\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"linl\">Link</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"link\"\n                value={this.state.link}\n                onChange={this.onChangeLink}\n                name=\"link\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"displayname\">Display Link As:</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"displayname\"\n                value={this.state.displayname}\n                onChange={this.onChangeDisplayname}\n                name=\"displayname\"\n              />\n            </div>\n\n            <button onClick={this.saveCatalog} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class EditCatalog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      catalog: [],\n      title: props.title,\n      description: props.description,\n      link: props.link,\n      displayname: props.displayname,\n      archived: props.archived,\n    };\n    console.log(\"props: \", props);\n  }\n\n  submitHandler = (event) => {\n    let id = this.props._id;\n    event.preventDefault();\n    const fetchOptions = {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"PUT\",\n      body: JSON.stringify(this.state),\n    };\n    fetch(`https://helio-catalog-api.herokuapp.com/catalog/${id}`, fetchOptions)\n    //fetch(`http://localhost:8080/api/catalog/${id}`, fetchOptions)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.props.getCatalog();\n      })\n      .catch();\n  };\n  changeHandler = (event) => {\n    const key = event.target.getAttribute(\"name\");\n    event.preventDefault();\n    const update = {};\n    update[key] = event.target.value;\n    this.setState(update);\n  };\n\n  updateArchived = (e) => {\n    const currentState = this.state.archived;\n    this.setState({ archived: !currentState });\n\n    console.log(currentState);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"edit-form\">\n          <h3>Edit Entry</h3>\n          {this.state.editForm}\n\n          <form onSubmit={this.submitHandler}>\n            <div className=\"form-group\">\n              <label>Title:</label>\n              <input\n                className=\"form-control\"\n                default\n                value={this.state.title}\n                onChange={this.changeHandler}\n                name=\"title\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Definition:</label>\n              <input\n                className=\"form-control\"\n                default\n                value={this.state.description}\n                onChange={this.changeHandler}\n                name=\"description\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Link:</label>\n              <input\n                className=\"form-control\"\n                default\n                value={this.state.link}\n                onChange={this.changeHandler}\n                name=\"link\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Display Link As:</label>\n              <input\n                className=\"form-control\"\n                default\n                value={this.state.displayname}\n                onChange={this.changeHandler}\n                name=\"displayname\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>\n                <strong>Status:</strong>\n              </label>\n              {this.state.archived ? \"Archived\" : \"Current\"}\n            </div>\n\n            {this.state.archived ? (\n              <button\n                name=\"archived\"\n                default\n                value={this.state.archived}\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updateArchived(false)}\n              >\n                UnArchive\n              </button>\n            ) : (\n              <button\n                name=\"archived\"\n                default\n                value={this.state.archived}\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updateArchived(true)}\n              >\n                Archive\n              </button>\n            )}\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              value=\"update\"\n            >\n              Update\n            </button>\n\n            <p>{this.state.message}</p>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport EditCatalog from \"./editCatalog\";\n\n\nexport default class CatalogList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      catalog: [],\n      catalogList: [],\n      editForm: \"\",\n    };\n  }\n  getCatalog = () => {\n    fetch('https://helio-catalog-api.herokuapp.com/api/catalog')\n    //fetch(\"http://localhost:8080/api/catalog\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"data from api: \", data);\n        this.setState({\n          catalog: data,\n          catalogList: data.map((item) => {\n            return (\n              <li key={item._id} id={item._id} onClick={this.updateCatalog}>\n                {item.title || \"Unknown\"}\n              </li>\n            );\n          }),\n          editForm: \"\",\n        });\n      })\n      .catch();\n  };\n  updateCatalog = (event) => {\n    // this is the id of the item i want to update\n    //console.log('all catalog: ', this.state.catalog);\n    const id = event.target.getAttribute(\"id\");\n    const stupidFind = (_id) => {\n      for (let i = 0; i < this.state.catalog.length; i++) {\n        let catalog = this.state.catalog[i];\n        if (catalog._id === id) {\n          return catalog;\n        }\n      }\n      return null;\n    };\n    let thisCatalog = stupidFind(id);\n    //thisCatalog = thisCatalog[0];\n    //console.log('thisCatalog: ', thisCatalog);\n    //console.log('id: ', id);\n    this.setState(\n      {\n        editForm: \"\",\n      },\n      function () {\n        this.setState({\n          editForm: (\n            <EditCatalog {...thisCatalog} getCatalog={this.getCatalog} />\n          ),\n        });\n      }\n    );\n  };\n  return;\n\n  componentDidMount() {\n    this.getCatalog();\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>GLOSSARY</h4>\n      \n        <p>Please select a term:</p>\n        <div className=\"App\">\n          <ul>{this.state.catalogList}</ul>\n          {this.state.editForm}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.scss\";\n\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a\n            href=\"https://http.cat/418.jpg\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"navbar-brand\"\n          >\n            HelioMade\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/catalog\"} className=\"nav-link\" id=\"catalog\">\n                Glossary\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add Term\n              </Link>\n            </li>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"main-footer\">\n        <p>\n          “Dictionaries are like watches; the worst is better than none, and the\n          best cannot be expected to go quite true.”\n          <br />― Samuel Johnson\n        </p>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport NavBar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class Page extends Component {\n  render() {\n    return (\n      <section className=\"page-wrapper\">\n        <div>\n          <NavBar />\n          <main className=\"content\">\n              {this.props.children}\n          </main>\n          <Footer />\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport AddCatalog from \"./pages/addCatalog\";\nimport EditCatalog from \"./pages/editCatalog\";\nimport CatalogList from \"./pages/listCatalog\";\nimport Page from \"./components/Page\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Page>\n            <div>\n              <div className=\"container mt-3\">\n                <Switch>\n                  <Route exact path={[\"/\", \"/catalog\"]} component={CatalogList}\n                  />\n                  <Route exact path=\"/add\" component={AddCatalog} />\n                  <Route path=\"/catalog/:id\" component={EditCatalog} />\n                </Switch>\n              </div>\n            </div>\n          </Page>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}